name: Build & Deploy FastAPI

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io

      - name: Build and Push Docker image
        run: |
          IMAGE=ghcr.io/minakovmax/fastapi-app:latest
          docker build -t $IMAGE ./app
          docker push $IMAGE

      - name: Set up YC CLI with profile
        run: |
          echo "${{ secrets.YC_SA_KEY_JSON }}" | base64 -d > key.json
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
          export PATH="${HOME}/yandex-cloud/bin:$PATH"
          yc config profile create ml-ops-lab
          yc config profile activate ml-ops-lab
          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc config list
          yc version

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_YC_64 }}" | base64 -d > $HOME/.kube/config
          sed -i "s|/home/.*/yandex-cloud/bin/yc|${HOME}/yandex-cloud/bin/yc|g" $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Check YC CLI and cluster access
        run: |
          export PATH="${HOME}/yandex-cloud/bin:$PATH"
          kubectl version --client
          kubectl cluster-info

      - name: Create or update Kubernetes secret for MLflow
        run: |
          kubectl create secret generic mlflow-secrets \
            --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create or update Kubernetes secret for GHCR auth
        run: |
          kubectl create secret docker-registry ghcr-auth \
            --docker-server=ghcr.io \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --docker-email=dummy@example.com \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Deploy with Helm
        run: |
          helm upgrade --install fastapi charts/fastapi \
            --set image.repository=ghcr.io/minakovmax/fastapi-app \
            --set image.tag=latest \
            --set image.pullSecrets[0].name=ghcr-auth