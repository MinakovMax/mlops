name: Deploy MLflow to Kubernetes
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:      
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PG_PASSWORD_URL_ENCODED: ${{ secrets.PG_PASSWORD_URL_ENCODED }}
      PG_HOST: ${{ secrets.PG_HOST }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: "v1.28.0"
    
    - name: Set up Helm
      uses: azure/setup-helm@v3
      
    - name: Configure kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig
        echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV
        
    # Создание секретов
    - name: Create S3 credentials secret
      run: |
        kubectl create secret generic mlflow-s3-credentials \
          --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Create Docker registry secret
      run: |
        kubectl create secret docker-registry ghcr-secret \
          --docker-server=ghcr.io \
          --docker-username=${{ secrets.GH_USERNAME }} \
          --docker-password=${{ secrets.CR_PAT }} \
          --dry-run=client -o yaml | kubectl apply -f -
    
    # Генерация values.yaml
    - name: Export env and render values.yaml
      shell: bash
      run: |
        export PG_PASSWORD_URL_ENCODED
        export PG_HOST
        export BUCKET_NAME
        envsubst < charts/mlflow/values-template.yaml > charts/mlflow/values.yaml
        
    # Обновление Helm-репозитория и установка
    - name: Helm upgrade MLflow
      run: |
        helm repo add community-charts https://community-charts.github.io/helm-charts
        helm repo update
        helm upgrade --install mlflow-release community-charts/mlflow -f charts/mlflow/values.yaml
